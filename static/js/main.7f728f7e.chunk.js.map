{"version":3,"sources":["components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","id","this","props","projects","system","products","intervention","about","contact","React","Component","introText","src","alt","CaliApp","state","intro","index","changeIntro","bind","setState","introTxt","onChange","value","onClick","placeholder","type","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mOAqBeA,G,6KAhBX,OAAO,yBAAKC,UAAU,UACtB,6BACE,uBAAGA,UAAU,OAAOC,KAAK,cAAa,wBAAID,UAAU,QAAO,0BAAME,GAAG,UAAT,OAA4B,uBAAGF,UAAU,eAA9D,YAClC,4BACE,4BAAI,uBAAGC,KAAME,KAAKC,MAAMC,UAApB,aACJ,4BAAI,uBAAGJ,KAAME,KAAKC,MAAME,QAApB,WACJ,4BAAI,uBAAGL,KAAME,KAAKC,MAAMG,UAApB,aACJ,4BAAI,uBAAGN,KAAME,KAAKC,MAAMI,cAApB,uBACJ,4BAAI,uBAAGP,KAAME,KAAKC,MAAMK,OAApB,aACJ,4BAAI,uBAAGR,KAAME,KAAKC,MAAMM,SAApB,sB,GAZEC,IAAMC,YCElBC,EAAW,CACT,uBAAGX,GAAG,QAAN,+FACP,uBAAGA,GAAG,QAAN,6GAAuH,6BAAK,6BAA5H,iGAEM,yBAAKY,IAAI,oFAAoFC,IAAI,qBACtG,yBAAKD,IAAI,qGAAqGC,IAAI,wBAwErGC,E,kDApEb,WAAYZ,GAAO,IAAD,8BAChB,cAAMA,IACDa,MAAO,CACVC,MAAML,EACNM,MAAM,GAEV,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBANC,E,0DASblB,KAAKc,MAAME,MAAQ,EACtBhB,KAAKmB,SAAS,CACZJ,MAAOf,KAAKc,MAAMC,MAClBC,MAAOhB,KAAKc,MAAME,MAAM,IAGzBhB,KAAKmB,SAAS,CACZH,MAAwB,EAAlBhB,KAAKc,MAAME,U,+BAKpB,IAAMI,EAAWV,EAAUV,KAAKc,MAAME,OAEtC,OACA,yBAAKnB,UAAU,QACV,kBAAC,EAAD,CAAKK,SAAS,YAAYC,OAAO,UAAUC,SAAS,YAAYC,aAAa,UAAUC,MAAM,SAASC,QAAQ,aAC/G,8BACA,6BAASR,GAAG,SACV,yBAAKA,GAAG,WACN,uBAAGsB,SAAUrB,KAAKiB,YAAaK,MAAOtB,KAAKc,MAAMC,OAAQK,IAAmB,uBAAGvB,UAAU,sBAAsBE,GAAG,YAAYwB,QAASvB,KAAKiB,YAAaI,SAAUrB,KAAKiB,eAClK,6BACR,uBAAGnB,KAAK,aAAY,uBAAGD,UAAU,0BAA0BE,GAAG,eAChE,6BAASA,GAAG,SACV,yBAAKF,UAAU,aACb,oCAAS,0BAAMA,UAAU,aAAhB,MAAT,aACA,8BACE,8BAAU2B,YAAY,sBAAsB,6BAC5C,4BAAQC,KAAK,SAAS5B,UAAU,YAAW,uBAAGC,KAAK,2BAAR,4BAG3C,6BACJ,6BAASC,GAAG,YACV,wBAAIF,UAAU,SAAd,aAEJ,6BAASE,GAAG,UACV,wBAAIF,UAAU,SAAd,WAEA,6BAASE,GAAG,YACZ,wBAAIF,UAAU,SAAd,aAEA,6BAASE,GAAG,UACZ,wBAAIF,UAAU,SAAd,uBAEA,6BAASE,GAAG,SACZ,wBAAIF,UAAU,SAAd,aAEA,6BAASE,GAAG,WACZ,wBAAIF,UAAU,SAAd,eAEH,gCACD,sE,GA7DgBW,IAAMC,WCARiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.7f728f7e.chunk.js","sourcesContent":["import React from 'react';\n\nclass Nav extends React.Component{\n  \n  render(){\n    return(<div className=\"navbar\">\n    <nav>\n      <a className=\"logo\" href=\"index.html\"><h1 className=\"head\"><span id=\"header\">Cal</span><i className=\"fa fa-tree\"></i>Bom.org</h1></a>\n          <ul>\n            <li><a href={this.props.projects}>Projects</a></li>\n            <li><a href={this.props.system}>System</a></li>\n            <li><a href={this.props.products}>Products</a></li>\n            <li><a href={this.props.intervention}>Intervention Areas</a></li>\n            <li><a href={this.props.about}>About Us</a></li>\n            <li><a href={this.props.contact}>Contact Us</a></li>\n          </ul>\n        </nav>\n     </div> \n    )\n  }\n};\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport Nav from './components/navbar';\n\nconst introText= [\n        <p id=\"nstl\">\"A micro regional green economy development foundation, building sustainable ecosystems...\"</p>,\n <p id=\"nstl\">Areas of interest include the local government areas of Akwa Ibom State and Cross River State in Nigeria. <br/><br/>\n    See the maps of both Akwa Ibom state and Cross River State respectively in the next slides...</p>, \n       <img src=\"https://nigeriazipcodes.com/wp-content/uploads/2012/07/Akwa_Ibom-map-720x1024.jpg\" alt=\"map of akwa ibom\"/>,\n  <img src=\"https://nigeriazipcodes.com/wp-content/uploads/2012/07/Cross-River-State-Postcode-Map-766x1024.jpg\" alt=\"map of cross river\"/>\n      ];\n\nclass CaliApp extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      intro:introText,\n      index:0\n    }\n  this.changeIntro=this.changeIntro.bind(this);\n   }\n  changeIntro(){\n    if(this.state.index < 3){\n    this.setState({\n      intro: this.state.intro,\n      index: this.state.index+1\n    });\n   }else{\n     this.setState({\n       index:this.state.index *0\n     });\n   }\n  }\n  render(){\n    const introTxt = introText[this.state.index];\n    \n    return(\n    <div className=\"main\">\n         <Nav projects=\"#projects\" system=\"#system\" products=\"#products\" intervention=\"#interv\" about=\"#about\" contact=\"#contact\"/>\n        <main>\n        <section id=\"intro\">\n          <div id=\"intCont\">\n            <p onChange={this.changeIntro} value={this.state.intro}>{introTxt}</p></div><i className=\"fa fa-chevron-right\" id=\"secondarr\" onClick={this.changeIntro} onChange={this.changeIntro}></i>\n        </section><br/>\n          <a href=\"#projects\"><i className=\"fa fa-angle-double-down\" id=\"arrowdown\"></i></a>\n        <section id=\"break\">\n          <div className=\"container\">\n            <h1>Make <span className=\"highlight\">An</span> Enquiry.</h1>\n            <form>\n              <textarea placeholder=\" Enter Enquiry...\" /><br />\n              <button type=\"submit\" className=\"button_1\"><a href=\"mailto:info@calibom.com\"> Submit Your Enquiry</a></button>\n            </form>\n          </div>\n    </section><br/>\n          <section id=\"projects\">\n            <h2 className=\"title\">Projects</h2>\n          </section>\n        <section id=\"system\">\n          <h2 className=\"title\">System</h2>\n          </section>\n          <section id=\"products\">\n          <h2 className=\"title\">Products</h2>\n          </section>\n          <section id=\"interv\">\n          <h2 className=\"title\">Intervention Areas</h2>\n          </section>\n          <section id=\"about\">\n          <h2 className=\"title\">About Us</h2>\n          </section>\n          <section id=\"contact\">\n          <h2 className=\"title\">Contact Us</h2>\n          </section>\n       <footer>\n      <p>Calibom.org, Copyright &copy; 2020</p>\n    </footer>\n        </main>\n       </div>\n    )\n  }\n};\n\nexport default CaliApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CaliApp from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CaliApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}